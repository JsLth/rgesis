% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gesis_auth.R
\name{gesis_auth}
\alias{gesis_auth}
\alias{gesis_can_auth}
\title{Authenticate user}
\usage{
gesis_auth(email = NULL, password = NULL, prompt = interactive())

gesis_can_auth()
}
\arguments{
\item{email, password}{Email address and password linked to a GESIS user
account. These only have to be provided once and will be retrieved using
\code{\link[keyring]{key_get}} afterwards. If not specified and
\code{prompt = TRUE}, asks for email and password interactively.}

\item{prompt}{If \code{TRUE} and \code{email} or \code{password} are
not specified, opens a console prompt to provide these arguments. If
\code{FALSE}, throws an error in this case. Defaults to \code{TRUE} if
run in an interactive session.}
}
\value{
\code{NULL}, invisibly.
}
\description{
Authenticate a GESIS user account using OAuth 2.0. This is necessary to
download datasets using \code{\link{gesis_data}}.
}
\details{
\code{gesis_auth()} performs a GESIS login once and, if successful, stores
the credentials used for the login in a \link[keyring:keyring_list]{keyring}
on the disk. For all subsequent authentications, the credentials are
retrieved from the keyring to authenticate automatically. To prevent the
authentication process to access the stored credentials every time an
OAuth request is sent, you can set \code{options(rgesis_cache_disk = TRUE)}
to allow the access token to be cached. Note that this comes at the cost
of storing access credentials on disk. See
\code{\link[httr2]{req_oauth_password}} for details.

To check if the package can successfully authenticate without passing
new credentials, you can run \code{gesis_can_auth()}. Note that this
function catches all types of errors that occur when trying to
authenticate. It does not make assumptions about the reason why an error
occured. In other words, a failing auth check is not a guarantee that an
authentication is invalid. This function can be handy to check if datasets
can be downloaded in automated workflows without throwing an error. For
example:

\preformatted{if (gesis_can_auth()) {
  gesis_data(...)
}}
}
\examples{
if (FALSE) {
# if email and password are not stored yet, gesis_auth() registers them
# in a keyring and checks if they work
gesis_auth(email = "name@test.org", password = "DONTLOOK")

# if credentials are already stored in a keyring, gesis_auth() simply
# checks if the login works
gesis_auth()
}
}
